{"name":"Grunt-ftpscript","tagline":"Upload files to FTP Server, Active or Passive mode, bash ftp command.","body":"# grunt-ftpscript [![Build Status](https://travis-ci.org/netwjx/grunt-ftpscript.png)](https://travis-ci.org/netwjx/grunt-ftpscript) [![Dependency Status](https://gemnasium.com/netwjx/grunt-ftpscript.png)](https://gemnasium.com/netwjx/grunt-ftpscript) [![NPM version](https://badge.fury.io/js/grunt-ftpscript.png)](http://badge.fury.io/js/grunt-ftpscript)\r\n\r\n> Upload files to FTP Server, Active or Passive mode, base ftp command.\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-ftpscript --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-ftpscript');\r\n```\r\n\r\nUse [matchdep](https://github.com/tkellen/node-matchdep) load npm tasks is good idea.\r\n\r\n```js\r\nrequire('matchdep').filterDev('grunt-*').forEach(grunt.loadNpmTasks);\r\n```\r\n\r\n## The \"ftpscript\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `ftpscript` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  ftpscript: {\r\n    upload: {\r\n      options: {\r\n        host: 'ftp.server.host'\r\n      },\r\n      files: [\r\n        { src: 'src/localfile', dest: '/remotefile' },\r\n        {\r\n          expand: true,\r\n          cwd: 'dest',\r\n          src: [\r\n            '**/*.js',\r\n            '!**/exclude.js'\r\n          ],\r\n          dest: '/remotefolder/'\r\n        }\r\n      ]\r\n    }\r\n  },\r\n})\r\n```\r\n\r\nUsername and password are stored as a JSON object in a file named `.ftppass`, This file should be located in the same folder as your Gruntfile. like [grunt-ftp-deploy](https://github.com/zonak/grunt-ftp-deploy).\r\n\r\n```json\r\n{\r\n  \"ftp.server.host\": {\r\n    \"username\": \"username1\",\r\n    \"password\": \"password1\"\r\n  },\r\n  \"authKey\":{\r\n    \"username\": \"username2\",\r\n    \"password\": \"password2\"\r\n  }\r\n}\r\n```\r\n\r\n\r\n### Options\r\n\r\n#### options.host\r\nType: `String`\r\nDefault value: `'localhost'`\r\n\r\nFtp Server host address.\r\n\r\n#### options.port\r\nType: `Number`\r\nDefault value: `21`\r\n\r\nFtp Server port.\r\n\r\n#### options.authKey\r\nType: `String`\r\nDefault value: `same as options.host`\r\n\r\nKey in the `.ftppass`.\r\n\r\n#### options.passive\r\nType: `Boolean`\r\nDefault value: `false`\r\n\r\nUse passive mode.\r\n\r\n#### options.type\r\nType: `String`\r\nDefault value: `undefined`\r\n\r\n`ascii` or `binary` or auto detect with mime type.\r\n\r\n#### options.dryrun\r\nType: `Boolean`\r\nDefault value: `false`\r\n\r\nDry run, display ftp script, connect to Ftp Server, skip upload, send `ls` command, and `quit`.\r\n\r\n#### options.ftpCommand\r\nType: `String`\r\nDefault value: `'ftp'`\r\n\r\nFtp command path, if it dos not in system PATH.\r\n\r\n#### options.encoding\r\nType: `String`\r\nDefault value: `'utf-8'`\r\n\r\nThe encoding of send to Server stream.\r\n\r\n#### options.ftpEncoding\r\nType: `String`\r\nDefault value: `'utf-8'`\r\n\r\nThe encoding of recive from Server stream.\r\n\r\n### options.mkdirs\r\nType: `Boolean`\r\nDefault value: `true`\r\n\r\nExecute `mkdir /remote/folder` command.\r\n\r\n### Usage Examples\r\n\r\nIn `Gruntfile.js`\r\n\r\n```js\r\ngrunt.initConfig({\r\n  ftpscript: {\r\n    main: {\r\n      options: {\r\n        host: 'localhost'\r\n        , port: 2121\r\n        , passive: true\r\n        // , type: 'ascii'\r\n        // , mkdirs: false\r\n        // , dryrun: true\r\n        // , ftpCommand: 'ftp'\r\n        // , encoding: 'utf-8'\r\n        // , ftpEncoding: 'utf-8'\r\n      },\r\n      files: [\r\n        {\r\n          expand: true,\r\n          cwd: 'test',\r\n          src: ['**/*.js', '!**/exclude.js', '!**/sub.js' , '!footer.js'],\r\n          dest: '/js/'\r\n        },\r\n        {\r\n          expand: true,\r\n          cwd: 'test',\r\n          src: ['nav_*', '!nav_test.html'],\r\n          dest: '/app/'\r\n        },\r\n        {\r\n          src: ['test/footer.js'],\r\n          dest: '/foo/footer.js'\r\n        }\r\n      ]\r\n    }\r\n  }\r\n});\r\n```\r\n\r\nUse dry run command parameters.\r\n\r\n```\r\n> grunt ftpscript:main:dry\r\nRunning \"ftpscript:main:dry\" (ftpscript) task\r\n\r\nDry-run mode, start display ftp script.\r\nopen localhost 2121\r\nuser testuser testpass\r\ntype ascii\r\nprompt\r\npassive\r\nmkdir \"/js\"\r\nmkdir \"/js/sub\"\r\nmkdir \"/app\"\r\nmkdir \"/foo\"\r\nput \"test/one.js\" \"/js/one.js\"\r\nput \"test/sub/one.js\" \"/js/sub/one.js\"\r\nput \"test/sub/three.js\" \"/js/sub/three.js\"\r\nput \"test/sub/two.js\" \"/js/sub/two.js\"\r\nput \"test/three.js\" \"/js/three.js\"\r\nput \"test/two.js\" \"/js/two.js\"\r\nput \"test/unit_test.js\" \"/js/unit_test.js\"\r\nput \"test/nav_one.html\" \"/app/nav_one.html\"\r\nput \"test/nav_two.html\" \"/app/nav_two.html\"\r\nput \"test/footer.js\" \"/foo/footer.js\"\r\nquit\r\n\r\nEnd display ftp script.\r\nConnected to localhost.\r\n>> 220 Vhost server\r\ndrwxr-xr-x   3 nobody   nobody       4096 Jul 18 06:58 app\r\ndrwxr-xr-x   2 nobody   nobody       4096 Jul 17 09:54 foo\r\ndrwxr-xr-x   3 nobody   nobody       4096 Jul 17 09:54 js\r\n226 Transfer complete\r\n>> 221 Goodbye.\r\n\r\nDone, without errors.\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}